plugins {
    id 'com.android.test'
    id 'org.jetbrains.kotlin.android'
}


repositories {
    maven {
        url 'https://a8c-libs.s3.amazonaws.com/android'
        content {
            includeGroup "org.wordpress"
            includeGroup "org.wordpress.fluxc"
            includeGroup "org.wordpress.fluxc.plugins"
            includeGroup "org.wordpress.wellsql"
            includeGroup "org.wordpress.mediapicker"
            includeGroup "com.automattic"
        }
    }
    maven {
        url 'https://zendesk.jfrog.io/zendesk/repo'
        content {
            includeGroup "com.zendesk"
            includeGroup "com.zendesk.belvedere2"
        }
    }
    mavenCentral()
    maven {
        url "https://a8c-libs.s3.amazonaws.com/android/jcenter-mirror"
        content {
            includeVersion "com.android.volley", "volley", "1.1.1"
            includeVersion "com.google.android", "flexbox", "2.0.1"
            includeVersion "com.jraska", "falcon", "2.1.1"
            includeVersion "org.wordpress", "wellsql", "1.6.0"
            includeVersion "org.wordpress", "wellsql-core", "1.6.0"
        }
    }
    maven {
        url "https://jitpack.io"
        content {
            includeModule("com.github.Automattic", "Automattic-Tracks-Android")
            includeModule("com.github.wordpress-mobile.WordPress-Aztec-Android", "aztec")
            includeModule("com.github.wordpress-mobile.WordPress-Aztec-Android", "glide-loader")
            includeModule("com.github.chrisbanes", "PhotoView")
            includeModule("com.github.PhilJay", "MPAndroidChart")
        }
    }
}

android {
    compileSdk 31

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        minSdk 23
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        missingDimensionStrategy 'buildType', 'vanilla'

        buildConfigField "String", "QUICK_LOGIN_WP_EMAIL", "\"${project.getProperties().get("quickLoginWpEmail")}\""
        buildConfigField "String", "QUICK_LOGIN_WP_PASSWORD", "\"${project.getProperties().get("quickLoginWpPassword")}\""
        buildConfigField "String", "QUICK_LOGIN_WP_SITE", "\"${project.getProperties().get("quickLoginWpSite")}\""
    }

    buildTypes {
        // This benchmark buildType is used for benchmarking, and should function like your
        // release build (for example, with minification on). It's signed with a debug key
        // for easy local/CI testing.
        benchmark {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable = false
            signingConfig = debug.signingConfig

            matchingFallbacks = ["release"]
        }
    }

    targetProjectPath = ":WooCommerce"
    experimentalProperties["android.experimental.self-instrumenting"] = true
}

dependencies {
    implementation 'androidx.test.ext:junit:1.1.3'
    implementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    implementation 'androidx.benchmark:benchmark-macro-junit4:1.1.0-rc02'

    implementation project(path: ':sharedtest')
}

androidComponents {
    beforeVariants(selector().all()) {
        enabled = buildType == "benchmark"
    }
}
